<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.melot.talkee.dao.WhiteboardMapper">
  <resultMap id="BaseResultMap" type="com.melot.talkee.driver.domain.Whiteboard">
    <id column="hist_id" jdbcType="INTEGER" property="histId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="period_id" jdbcType="INTEGER" property="periodId" />
    <result column="lesson_id" jdbcType="INTEGER" property="lessonId" />
    <result column="lesson_version" jdbcType="INTEGER" property="lessonVersion" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="segment" jdbcType="INTEGER" property="segment" />
    <result column="msg_data" jdbcType="VARCHAR" property="msgData" />
  </resultMap>
  <sql id="Base_Column_List">
    hist_id, user_id, period_id, lesson_id, lesson_version, create_time, segment, msg_data
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from hist_whiteboard
    where hist_id = #{histId,jdbcType=INTEGER}
  </select>

<delete id="deletebyPeriodId" parameterType="java.lang.Integer" >
    DELETE   from hist_whiteboard
    where period_id = #{periodId,jdbcType=INTEGER}
  </delete>

  <select id="selectByParams" parameterType="java.util.HashMap" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from hist_whiteboard
    <where>
        <if test="periodId!=null">
         and period_id=#{periodId}
        </if>
        <if test="segment!=null">
          and segment=#{segment}
        </if>
        ORDER  by  create_time
        limit #{limit} offset #{offset}
    </where>

  </select>

	<select id="selectBySelective" parameterType="com.melot.talkee.driver.domain.Whiteboard"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from hist_whiteboard
		<where>
			<if test="userId != null">
				and user_id = #{userId,jdbcType=INTEGER}
			</if>
			<if test="periodId != null">
				and period_id = #{periodId,jdbcType=INTEGER}
			</if>
			<if test="lessonId != null">
				and lesson_id = #{lessonId,jdbcType=INTEGER}
			</if>
			<if test="lessonVersion != null">
				and lesson_version = #{lessonVersion,jdbcType=INTEGER}
			</if>
			<if test="segment != null">
				and segment = #{segment,jdbcType=INTEGER}
			</if>
		</where>
		order by create_time asc
	</select>
  
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from hist_whiteboard
    where hist_id = #{histId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.melot.talkee.driver.domain.Whiteboard">
  	<selectKey resultType="java.lang.Integer" order="BEFORE" keyProperty="histId">
		select nextval('seq_hist_whiteboard')
	</selectKey>
    insert into hist_whiteboard (hist_id, user_id, period_id, 
      lesson_id, lesson_version, create_time, 
      segment, msg_data)
    values (#{histId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{periodId,jdbcType=INTEGER}, 
      #{lessonId,jdbcType=INTEGER}, #{lessonVersion,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{segment,jdbcType=INTEGER}, #{msgData,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.melot.talkee.driver.domain.Whiteboard">
	<selectKey resultType="java.lang.Integer" order="BEFORE" keyProperty="histId">
		select nextval('seq_hist_whiteboard')
	</selectKey>
    insert into hist_whiteboard
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="histId != null">
        hist_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="periodId != null">
        period_id,
      </if>
      <if test="lessonId != null">
        lesson_id,
      </if>
      <if test="lessonVersion != null">
        lesson_version,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="segment != null">
        segment,
      </if>
      <if test="msgData != null">
        msg_data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="histId != null">
        #{histId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="periodId != null">
        #{periodId,jdbcType=INTEGER},
      </if>
      <if test="lessonId != null">
        #{lessonId,jdbcType=INTEGER},
      </if>
      <if test="lessonVersion != null">
        #{lessonVersion,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="segment != null">
        #{segment,jdbcType=INTEGER},
      </if>
      <if test="msgData != null">
        #{msgData,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.melot.talkee.driver.domain.Whiteboard">
    update hist_whiteboard
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="periodId != null">
        period_id = #{periodId,jdbcType=INTEGER},
      </if>
      <if test="lessonId != null">
        lesson_id = #{lessonId,jdbcType=INTEGER},
      </if>
      <if test="lessonVersion != null">
        lesson_version = #{lessonVersion,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="segment != null">
        segment = #{segment,jdbcType=INTEGER},
      </if>
      <if test="msgData != null">
        msg_data = #{msgData,jdbcType=VARCHAR},
      </if>
    </set>
    where hist_id = #{histId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.melot.talkee.driver.domain.Whiteboard">
    update hist_whiteboard
    set user_id = #{userId,jdbcType=INTEGER},
      period_id = #{periodId,jdbcType=INTEGER},
      lesson_id = #{lessonId,jdbcType=INTEGER},
      lesson_version = #{lessonVersion,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      segment = #{segment,jdbcType=INTEGER},
      msg_data = #{msgData,jdbcType=VARCHAR}
    where hist_id = #{histId,jdbcType=INTEGER}
  </update>
</mapper>