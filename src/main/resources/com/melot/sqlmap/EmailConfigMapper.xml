<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.melot.talkee.dao.EmailConfigMapper">
  <resultMap id="BaseResultMap" type="com.melot.talkee.driver.domain.EmailConfig">
    <id column="template_id" jdbcType="INTEGER" property="templateId" />
    <result column="advice_type" jdbcType="INTEGER" property="adviceType" />
    <result column="advice_user_type" jdbcType="INTEGER" property="adviceUserType" />
    <result column="advice_template" jdbcType="VARCHAR" property="adviceTemplate" />
    <result column="subject" jdbcType="VARCHAR" property="subject" />
    <result column="advice_status" jdbcType="INTEGER" property="adviceStatus" />
  </resultMap>
  <sql id="Base_Column_List">
    template_id, advice_type, advice_user_type, advice_template, advice_status,subject
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from conf_email
    where template_id = #{templateId,jdbcType=INTEGER}
  </select>
  <select id="selectByParam" parameterType="com.melot.talkee.driver.domain.EmailConfig" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from conf_email
    <where>
      <if test="adviceType">
        and advice_type=#{adviceType,jdbcType=INTEGER}
      </if>
      <if test="adviceUserType">
        and  advice_user_type=#{adviceUserType,jdbcType=INTEGER}
      </if>
      <if test="adviceStatus">
        and advice_status=#{adviceStatus,jdbcType=INTEGER}
      </if>
    </where>
  </select>




  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from conf_email
    where template_id = #{templateId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.melot.talkee.driver.domain.EmailConfig">
    insert into conf_email (template_id, advice_type, advice_user_type, 
      advice_template, advice_status)
    values (#{templateId,jdbcType=INTEGER}, #{adviceType,jdbcType=INTEGER}, #{adviceUserType,jdbcType=INTEGER}, 
      #{adviceTemplate,jdbcType=VARCHAR}, #{adviceStatus,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.melot.talkee.driver.domain.EmailConfig">
    insert into conf_email
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="templateId != null">
        template_id,
      </if>
      <if test="adviceType != null">
        advice_type,
      </if>
      <if test="adviceUserType != null">
        advice_user_type,
      </if>
      <if test="adviceTemplate != null">
        advice_template,
      </if>
      <if test="adviceStatus != null">
        advice_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="templateId != null">
        #{templateId,jdbcType=INTEGER},
      </if>
      <if test="adviceType != null">
        #{adviceType,jdbcType=INTEGER},
      </if>
      <if test="adviceUserType != null">
        #{adviceUserType,jdbcType=INTEGER},
      </if>
      <if test="adviceTemplate != null">
        #{adviceTemplate,jdbcType=VARCHAR},
      </if>
      <if test="adviceStatus != null">
        #{adviceStatus,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.melot.talkee.driver.domain.EmailConfig">
    update conf_email
    <set>
      <if test="adviceType != null">
        advice_type = #{adviceType,jdbcType=INTEGER},
      </if>
      <if test="adviceUserType != null">
        advice_user_type = #{adviceUserType,jdbcType=INTEGER},
      </if>
      <if test="adviceTemplate != null">
        advice_template = #{adviceTemplate,jdbcType=VARCHAR},
      </if>
      <if test="adviceStatus != null">
        advice_status = #{adviceStatus,jdbcType=INTEGER},
      </if>
    </set>
    where template_id = #{templateId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.melot.talkee.driver.domain.EmailConfig">
    update conf_email
    set advice_type = #{adviceType,jdbcType=INTEGER},
      advice_user_type = #{adviceUserType,jdbcType=INTEGER},
      advice_template = #{adviceTemplate,jdbcType=VARCHAR},
      advice_status = #{adviceStatus,jdbcType=INTEGER}
    where template_id = #{templateId,jdbcType=INTEGER}
  </update>
</mapper>