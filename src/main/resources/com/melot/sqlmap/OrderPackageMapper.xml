<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.melot.talkee.dao.OrderPackageMapper">
  <resultMap id="BaseResultMap" type="com.melot.talkee.driver.domain.OrderPackage">
    <id column="package_id" jdbcType="INTEGER" property="packageId" />
    <result column="package_name" jdbcType="VARCHAR" property="packageName" />
    <result column="periords" jdbcType="INTEGER" property="periords" />
    <result column="public_lesson" jdbcType="INTEGER" property="publicLesson" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="old_amount" jdbcType="INTEGER" property="oldAmount" />
    <result column="cur_amount" jdbcType="INTEGER" property="curAmount" />
    <result column="begin_time" jdbcType="TIMESTAMP" property="beginTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="conf_time" jdbcType="INTEGER" property="confTime" />
    <result column="vaild_days" jdbcType="INTEGER" property="vaildDays" />
  </resultMap>
  <sql id="Base_Column_List">
    package_id, package_name, periords, public_lesson, state, old_amount, cur_amount, 
    begin_time, end_time, conf_time, vaild_days
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from conf_order_package
    where package_id = #{packageId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from conf_order_package
    where package_id = #{packageId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.melot.talkee.driver.domain.OrderPackage" useGeneratedKeys="true" keyProperty="packageId">
    <selectKey keyProperty="packageId" order="BEFORE" resultType="java.lang.Integer">
       select nextval('seq_conf_order_package')
    </selectKey>

    insert into conf_order_package (package_id, package_name, periords,
      public_lesson, state, old_amount, 
      cur_amount, begin_time, end_time, 
      conf_time, vaild_days)
    values (#{packageId,jdbcType=INTEGER}, #{packageName,jdbcType=VARCHAR}, #{periords,jdbcType=INTEGER}, 
      #{publicLesson,jdbcType=INTEGER}, #{state,jdbcType=INTEGER}, #{oldAmount,jdbcType=INTEGER}, 
      #{curAmount,jdbcType=INTEGER}, #{beginTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, 
      #{confTime,jdbcType=INTEGER}, #{vaildDays,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.melot.talkee.driver.domain.OrderPackage">
    insert into conf_order_package
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="packageId != null">
        package_id,
      </if>
      <if test="packageName != null">
        package_name,
      </if>
      <if test="periords != null">
        periords,
      </if>
      <if test="publicLesson != null">
        public_lesson,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="oldAmount != null">
        old_amount,
      </if>
      <if test="curAmount != null">
        cur_amount,
      </if>
      <if test="beginTime != null">
        begin_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="confTime != null">
        conf_time,
      </if>
      <if test="vaildDays != null">
        vaild_days,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="packageId != null">
        #{packageId,jdbcType=INTEGER},
      </if>
      <if test="packageName != null">
        #{packageName,jdbcType=VARCHAR},
      </if>
      <if test="periords != null">
        #{periords,jdbcType=INTEGER},
      </if>
      <if test="publicLesson != null">
        #{publicLesson,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="oldAmount != null">
        #{oldAmount,jdbcType=INTEGER},
      </if>
      <if test="curAmount != null">
        #{curAmount,jdbcType=INTEGER},
      </if>
      <if test="beginTime != null">
        #{beginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="confTime != null">
        #{confTime,jdbcType=INTEGER},
      </if>
      <if test="vaildDays != null">
        #{vaildDays,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.melot.talkee.driver.domain.OrderPackage">
    update conf_order_package
    <set>
      <if test="packageName != null">
        package_name = #{packageName,jdbcType=VARCHAR},
      </if>
      <if test="periords != null">
        periords = #{periords,jdbcType=INTEGER},
      </if>
      <if test="publicLesson != null">
        public_lesson = #{publicLesson,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="oldAmount != null">
        old_amount = #{oldAmount,jdbcType=INTEGER},
      </if>
      <if test="curAmount != null">
        cur_amount = #{curAmount,jdbcType=INTEGER},
      </if>
      <if test="beginTime != null">
        begin_time = #{beginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="confTime != null">
        conf_time = #{confTime,jdbcType=INTEGER},
      </if>
      <if test="vaildDays != null">
        vaild_days = #{vaildDays,jdbcType=INTEGER},
      </if>
    </set>
    where package_id = #{packageId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.melot.talkee.driver.domain.OrderPackage">
    update conf_order_package
    set package_name = #{packageName,jdbcType=VARCHAR},
      periords = #{periords,jdbcType=INTEGER},
      public_lesson = #{publicLesson,jdbcType=INTEGER},
      state = #{state,jdbcType=INTEGER},
      old_amount = #{oldAmount,jdbcType=INTEGER},
      cur_amount = #{curAmount,jdbcType=INTEGER},
      begin_time = #{beginTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      conf_time = #{confTime,jdbcType=INTEGER},
      vaild_days = #{vaildDays,jdbcType=INTEGER}
    where package_id = #{packageId,jdbcType=INTEGER}
  </update>
</mapper>